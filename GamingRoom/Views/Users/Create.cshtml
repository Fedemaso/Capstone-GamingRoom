@model GamingRoom.Models.Users

@{
    ViewBag.Title = "Create User";
}

<h2 class="text-center">Crea Utente</h2>

@using (Html.BeginForm("Create", "Users", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal ms-5", @style = "height:100vh", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group text-white">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Username -->
        <div class="form-group">
            <div class="ms-3">Nome Utente</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Password -->
        <div class="form-group">
            <div class="ms-3">Password</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } }) <!-- Aggiunto type="password" per nascondere l'input -->
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Email -->
        <div class="form-group">
            <div class="ms-3">Email</div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email" } }) <!-- Aggiunto type="email" per validare l'input come email -->
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Role -->
        <div class="form-group">
            <div class="ms-3">Ruolo</div>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Role, (SelectList)ViewBag.Roles, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Submit Button -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crea" class="btn btn-primary" />
            </div>
        </div>

        <div>
            @Html.ActionLink("Torna alla Lista", "Index", null, new { @class = "btn btn-default text-white" })
        </div>

    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
